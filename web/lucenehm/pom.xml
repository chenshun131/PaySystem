<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>wusc.edu.pay.common</groupId>
        <artifactId>pay-common-parent</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../../common/pay-common-parent</relativePath>
    </parent>

    <groupId>wusc.edu.pay.web</groupId>
    <artifactId>lucenehm</artifactId>
    <version>${lucenehm.version}</version>
    <packaging>war</packaging>

    <name>lucenehm</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>${compiler.source.version}</maven.compiler.source>
        <maven.compiler.target>${compiler.target.version}</maven.compiler.target>
        <maven.compiler.compilerVersion>${compiler.compilerVersion.version}</maven.compiler.compilerVersion>
    </properties>

    <dependencies>
        <!-- lucene Begin -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-analyzers-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queryparser</artifactId>
        </dependency>
        <!-- lucene End -->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>com.janeluo</groupId>
            <artifactId>ikanalyzer</artifactId>
        </dependency>
    </dependencies>

    <!-- war包构建 -->
    <build>
        <finalName>${project.name}</finalName>

        <!-- 替换配置文件中的placeholders -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <!-- 代码编译工具，防止出现编译异常 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${compiler.source.version}</source> <!-- 源代码使用的开发版本 -->
                    <target>${compiler.target.version}</target> <!-- 需要生成的目标class文件的编译版本 -->
                    <encoding>UTF-8</encoding>
                    <!-- 一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，源代码中需要没有使用低版本jdk中不支持的语法)，会存在target不同于source的情况 -->
                </configuration>
            </plugin>

            <!-- 将数据库表转换成对应 mybatis 代码工具 -->
            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.5</version>
                <configuration>
                    <configurationFile>${basedir}/src/main/resources/generatorConfig.xml</configurationFile>
                    <outputDirectory>${project.build.directory}/generated-sources/mybatis-generator</outputDirectory>
                    <verbose>true</verbose>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
